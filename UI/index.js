// import { Connectors } from 'web3-vanilla'
// const { InjectedConnector, NetworkOnlyConnector } = Connectors
 
// const MetaMask = new InjectedConnector({ supportedNetworks: [1, 4] })
 
// const Infura = new NetworkOnlyConnector({
//   supportedNetworkURLs: {
//     1: 'https://mainnet.infura.io/v3/...',
//   },
//   defaultNetwork: 1,
// })


import Web3 from '../node_modules/web3'
// import Web3Provider from 'web3-vanilla'
 
// const web3Provider = new Web3Provider({
//   connectors: connectors,
//   libraryName: 'web3.js',
//   web3Api: Web3,
// })
 
// const connectors = { MetaMask, Infura }

const contractAddress = "0x5341fDe1CC061A62b1F5075e997DA0FE2398B732";
const contractAbi = [{
    "_format": "hh-sol-artifact-1",
    "contractName": "Feedback",
    "sourceName": "contracts/Feedback.sol",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_feedbackMessage",
            "type": "string"
          }
        ],
        "name": "addFeedback",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "feedbackMessages",
        "outputs": [
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getFeedbackMessages",
        "outputs": [
          {
            "components": [
              {
                "internalType": "string",
                "name": "message",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              }
            ],
            "internalType": "struct Feedback.FeedbackMessage[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "bytecode": "0x608060405234801561001057600080fd5b50610b10806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d5f760e14610046578063300154141461006457806354d7c36614610095575b600080fd5b61004e6100b1565b60405161005b919061055c565b60405180910390f35b61007e600480360381019061007991906105c8565b6101f8565b60405161008c92919061064e565b60405180910390f35b6100af60048036038101906100aa91906107b3565b6102d4565b005b60606000805480602002602001604051908101604052809291908181526020016000905b828210156101ef57838290600052602060002090600202016040518060400160405290816000820180546101089061082b565b80601f01602080910402602001604051908101604052809291908181526020018280546101349061082b565b80156101815780601f1061015657610100808354040283529160200191610181565b820191906000526020600020905b81548152906001019060200180831161016457829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906100d5565b50505050905090565b6000818154811061020857600080fd5b906000526020600020906002020160009150905080600001805461022b9061082b565b80601f01602080910402602001604051908101604052809291908181526020018280546102579061082b565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908161033f9190610a08565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103f25780820151818401526020810190506103d7565b60008484015250505050565b6000601f19601f8301169050919050565b600061041a826103b8565b61042481856103c3565b93506104348185602086016103d4565b61043d816103fe565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047382610448565b9050919050565b61048381610468565b82525050565b600060408301600083015184820360008601526104a6828261040f565b91505060208301516104bb602086018261047a565b508091505092915050565b60006104d28383610489565b905092915050565b6000602082019050919050565b60006104f28261038c565b6104fc8185610397565b93508360208202850161050e856103a8565b8060005b8581101561054a578484038952815161052b85826104c6565b9450610536836104da565b925060208a01995050600181019050610512565b50829750879550505050505092915050565b6000602082019050818103600083015261057681846104e7565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6105a581610592565b81146105b057600080fd5b50565b6000813590506105c28161059c565b92915050565b6000602082840312156105de576105dd610588565b5b60006105ec848285016105b3565b91505092915050565b600082825260208201905092915050565b6000610611826103b8565b61061b81856105f5565b935061062b8185602086016103d4565b610634816103fe565b840191505092915050565b61064881610468565b82525050565b600060408201905081810360008301526106688185610606565b9050610677602083018461063f565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106c0826103fe565b810181811067ffffffffffffffff821117156106df576106de610688565b5b80604052505050565b60006106f261057e565b90506106fe82826106b7565b919050565b600067ffffffffffffffff82111561071e5761071d610688565b5b610727826103fe565b9050602081019050919050565b82818337600083830152505050565b600061075661075184610703565b6106e8565b90508281526020810184848401111561077257610771610683565b5b61077d848285610734565b509392505050565b600082601f83011261079a5761079961067e565b5b81356107aa848260208601610743565b91505092915050565b6000602082840312156107c9576107c8610588565b5b600082013567ffffffffffffffff8111156107e7576107e661058d565b5b6107f384828501610785565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061084357607f821691505b602082108103610856576108556107fc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108be7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610881565b6108c88683610881565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109056109006108fb84610592565b6108e0565b610592565b9050919050565b6000819050919050565b61091f836108ea565b61093361092b8261090c565b84845461088e565b825550505050565b600090565b61094861093b565b610953818484610916565b505050565b5b818110156109775761096c600082610940565b600181019050610959565b5050565b601f8211156109bc5761098d8161085c565b61099684610871565b810160208510156109a5578190505b6109b96109b185610871565b830182610958565b50505b505050565b600082821c905092915050565b60006109df600019846008026109c1565b1980831691505092915050565b60006109f883836109ce565b9150826002028217905092915050565b610a11826103b8565b67ffffffffffffffff811115610a2a57610a29610688565b5b610a34825461082b565b610a3f82828561097b565b600060209050601f831160018114610a725760008415610a60578287015190505b610a6a85826109ec565b865550610ad2565b601f198416610a808661085c565b60005b82811015610aa857848901518255600182019150602085019450602081019050610a83565b86831015610ac55784890151610ac1601f8916826109ce565b8355505b6001600288020188555050505b50505050505056fea26469706673582212209ff5d1a20a9437084916ed5daa702ebf8e01b5519e9fc1597b690551094a1bd064736f6c63430008110033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632d5f760e14610046578063300154141461006457806354d7c36614610095575b600080fd5b61004e6100b1565b60405161005b919061055c565b60405180910390f35b61007e600480360381019061007991906105c8565b6101f8565b60405161008c92919061064e565b60405180910390f35b6100af60048036038101906100aa91906107b3565b6102d4565b005b60606000805480602002602001604051908101604052809291908181526020016000905b828210156101ef57838290600052602060002090600202016040518060400160405290816000820180546101089061082b565b80601f01602080910402602001604051908101604052809291908181526020018280546101349061082b565b80156101815780601f1061015657610100808354040283529160200191610181565b820191906000526020600020905b81548152906001019060200180831161016457829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906100d5565b50505050905090565b6000818154811061020857600080fd5b906000526020600020906002020160009150905080600001805461022b9061082b565b80601f01602080910402602001604051908101604052809291908181526020018280546102579061082b565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908161033f9190610a08565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103f25780820151818401526020810190506103d7565b60008484015250505050565b6000601f19601f8301169050919050565b600061041a826103b8565b61042481856103c3565b93506104348185602086016103d4565b61043d816103fe565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047382610448565b9050919050565b61048381610468565b82525050565b600060408301600083015184820360008601526104a6828261040f565b91505060208301516104bb602086018261047a565b508091505092915050565b60006104d28383610489565b905092915050565b6000602082019050919050565b60006104f28261038c565b6104fc8185610397565b93508360208202850161050e856103a8565b8060005b8581101561054a578484038952815161052b85826104c6565b9450610536836104da565b925060208a01995050600181019050610512565b50829750879550505050505092915050565b6000602082019050818103600083015261057681846104e7565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6105a581610592565b81146105b057600080fd5b50565b6000813590506105c28161059c565b92915050565b6000602082840312156105de576105dd610588565b5b60006105ec848285016105b3565b91505092915050565b600082825260208201905092915050565b6000610611826103b8565b61061b81856105f5565b935061062b8185602086016103d4565b610634816103fe565b840191505092915050565b61064881610468565b82525050565b600060408201905081810360008301526106688185610606565b9050610677602083018461063f565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106c0826103fe565b810181811067ffffffffffffffff821117156106df576106de610688565b5b80604052505050565b60006106f261057e565b90506106fe82826106b7565b919050565b600067ffffffffffffffff82111561071e5761071d610688565b5b610727826103fe565b9050602081019050919050565b82818337600083830152505050565b600061075661075184610703565b6106e8565b90508281526020810184848401111561077257610771610683565b5b61077d848285610734565b509392505050565b600082601f83011261079a5761079961067e565b5b81356107aa848260208601610743565b91505092915050565b6000602082840312156107c9576107c8610588565b5b600082013567ffffffffffffffff8111156107e7576107e661058d565b5b6107f384828501610785565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061084357607f821691505b602082108103610856576108556107fc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108be7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610881565b6108c88683610881565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109056109006108fb84610592565b6108e0565b610592565b9050919050565b6000819050919050565b61091f836108ea565b61093361092b8261090c565b84845461088e565b825550505050565b600090565b61094861093b565b610953818484610916565b505050565b5b818110156109775761096c600082610940565b600181019050610959565b5050565b601f8211156109bc5761098d8161085c565b61099684610871565b810160208510156109a5578190505b6109b96109b185610871565b830182610958565b50505b505050565b600082821c905092915050565b60006109df600019846008026109c1565b1980831691505092915050565b60006109f883836109ce565b9150826002028217905092915050565b610a11826103b8565b67ffffffffffffffff811115610a2a57610a29610688565b5b610a34825461082b565b610a3f82828561097b565b600060209050601f831160018114610a725760008415610a60578287015190505b610a6a85826109ec565b865550610ad2565b601f198416610a808661085c565b60005b82811015610aa857848901518255600182019150602085019450602081019050610a83565b86831015610ac55784890151610ac1601f8916826109ce565b8355505b6001600288020188555050505b50505050505056fea26469706673582212209ff5d1a20a9437084916ed5daa702ebf8e01b5519e9fc1597b690551094a1bd064736f6c63430008110033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }
  
];


const feedbackMessageInput = document.getElementById("message");
const submitButton = document.getElementById("submit-btn");
const connectWalletButton = document.getElementById("connectWalletButton");
const feedbackMessagesList = document.getElementById("feedback-messages-list");

const connectWallet = async () => {
    if (window.ethereum) {
        window.web3 = new Web3(window.ethereum);
        try {
            await window.ethereum.enable();
            console.log("Wallet connected successfully.");
        } catch (error) {
            console.error(error);
        }
    } else if (window.web3) {
        window.web3 = new Web3(window.web3.currentprovider);
    } else {
        console.error("No Ethereum browser detected. Please install MetaMask.");
    }
};

const contract = new window.web3.eth.Contract(contractAbi, contractAddress);

connectWalletButton.addEventListener("click", connectWallet);

submitButton.addEventListener("click", async () => {
    if (window.web3.currentProvider.selectedAddress) {
        const feedbackMessage = feedbackMessageInput.value;
    await contract.methods.addFeedback(feedbackMessage).send({
        from: window.web3.currentProvider.selectedAddress
    });

    displayFeedbackMessages();
    } else {
        prompt("Please connect your wallet.");
    }
    
});



const displayFeedbackMessages = async () => {
    const messages = await contract.methods.getFeedbackMessages().call();
    feedbackMessagesList.innerHTML = "";
    messages.forEach(message => {
        const messageElement = document.createElement("div");
        messageElement.classList.add("feedback-message");
        messageElement.innerHTML = message;
        feedbackMessagesList.appendChild(messageElement);
    });
};

displayFeedbackMessages();